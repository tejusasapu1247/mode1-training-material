java.1ang Package
===================
	==> Provide classes that are fundamental for the creation of a Java program

	==> java.lang package includes the root classes that form the class hierarchy, 
		basic exceptions, types tied to the language definition, threading, 
		math functions, security functions, and also, information on the 
		underlying native system

	==>  The most important classes are as follows:

		=> Object 
		=> Class
		=> Enum
		=> Throwable
		=> Error, Exception, RunTimeException
		=> Thread
		=> String , StringBuilder, StringBuffer
		=> Comparable ( not Comparator!)
		=> Iterable
		=> Process, ClassLoader, Runtime, System, and Securi tyManager
		=> Math
		=> Wrapper classes

	System
	====
		=> Cant apply new to System class to create object 

		=> It provides several facilities such as standard input, 
		standard output, and error output streams; a means of loading files and 
		libraries

		=>Provide access to externally defined properties and environment variables; 

		=> Provide a utility method for quickly copying a part of an array


		int arrl[] ={1,3,2,4};
		int arr2 []= {6,7,8,O};

		System.arraycopy(arrl, 0, arr2, 0,3);

		System.currentTimeMillis();




	Object 
	=======

	Method:

	protected Object clone() 
	boolean equals (Object obj) 
	protected void finalize() 
	getClass()
	int hashCode () 
	void notify () 
	void notifyAll () 
	String toString() 
	void wait ()  notify () notifyAll ()


	String vs StringBuffer vs StringBuilder
	=====================
		=> String immutability
		=> StringBuilder creates a thread-safe, mutable sequence of characters
		=> StringBuffer is not thread safe


	Parsing of text
	===============

	The various way of parsing text in java:

	=> String split() method
	=> StringTokenizer and StreamTokenizer class belongs to the java.util
	=> Scanner class
	=> Pattern and Matcher classes, that implement regular expression

		Some method of StringTokenizer
		-----------------------------

		=> int countTokens () 
		=> boolean hasMoreElements() 
		=> boolean hasMoreTokens() 
		=> Object nextElement() 
		=> String nextToken()


i18n 
====

Advantage:

	=> Easy Localization: 
			The application can be easily and quickly localized

	=> Same Executable File: 
			The localized data needs to be incorporated in the application and the
			same executable runs worldwide.


	=> Dynamic Retrieval of Textual Elements:
			 Textual elements such as the GUI component labels are
			  stored outside the source code. 

			They are not hardcoded in the program. Therefore, these
			elements can be retrieved dynamically

	=> No Recompilation of New Languages:
		 New languages are supported without recompilation



Hello World
------------

		String language="de";
		String country="DE";
		
		Locale currentLocale;
		ResourceBundle messages;
		
		currentLocale =new Locale (language, country) ;
		
		messages =ResourceBundle. getBundle ("info/MessagesBundle", currentLocale);
						
		
		System.out.println(messages.getString("greetings")) ;
		System.out.println (messages.getString("inquiry"));
		System.out.println(messages.getString("farewell"));




	MessagesBundle_de_DE.properties

	greetings = Hallo
	farewell = Tschufs
	inquiry = Wiegeht's?

	MessagesBundle_en_US.properties

	greetings = Hello
	farewell = Goodbye
	inquiry = How are you?

	MessagesBundle_fr_FR.properties

	greetings = Bonjour.
	farewell = Au revoir.
	inquiry = Comment allez-vous?


	MessagesBundle.properties
	greetings = Hello
	farewell = Goodbye
	inquiry = How are you?








	
